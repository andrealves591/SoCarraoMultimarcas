/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import modelo.ClienteVO;
import modelo.EnderecoVO;
import servicos.ClienteServicos;
import servicos.ServicosFactory;

/**
 *
 * @author Andr√© Luiz Alves & Eduardo Gautier
 * @since 06/07/2018 - 16h03
 * @version 1.0 meta charset
 */
public class GUICadCliente extends javax.swing.JInternalFrame {

    ClienteVO objCliente = new ClienteVO();
    EnderecoVO objEndereco = new EnderecoVO();

    /**
     * Creates new form GUICadCliente
     */
    public GUICadCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSexo = new javax.swing.ButtonGroup();
        jlpDados = new javax.swing.JLayeredPane();
        jlNome = new javax.swing.JLabel();
        jlCpf = new javax.swing.JLabel();
        jlIdade = new javax.swing.JLabel();
        jlSexo = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        jtCpf = new javax.swing.JTextField();
        jtIdade = new javax.swing.JTextField();
        jrbMasculino = new javax.swing.JRadioButton();
        jrbFeminino = new javax.swing.JRadioButton();
        jrbOutros = new javax.swing.JRadioButton();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jbCadastrar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jlpEndereco = new javax.swing.JLayeredPane();
        jlRua = new javax.swing.JLabel();
        jlN = new javax.swing.JLabel();
        jlBairro = new javax.swing.JLabel();
        jlCidade = new javax.swing.JLabel();
        jlEstado = new javax.swing.JLabel();
        jtRua = new javax.swing.JTextField();
        jtBairro = new javax.swing.JTextField();
        jtCidade = new javax.swing.JTextField();
        jtN = new javax.swing.JTextField();
        jtEstado = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastrar Cliente");

        jlpDados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jlNome.setText("Nome:");

        jlCpf.setText("CPF:");

        jlIdade.setText("Idade:");

        jlSexo.setText("Sexo:");

        jtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNomeFocusLost(evt);
            }
        });
        jtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNomeKeyPressed(evt);
            }
        });

        jtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCpfFocusLost(evt);
            }
        });
        jtCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCpfKeyPressed(evt);
            }
        });

        jtIdade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtIdadeFocusLost(evt);
            }
        });
        jtIdade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtIdadeKeyPressed(evt);
            }
        });

        bgSexo.add(jrbMasculino);
        jrbMasculino.setText("Masculino");
        jrbMasculino.setActionCommand("Masculino");
        jrbMasculino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrbMasculinoKeyPressed(evt);
            }
        });

        bgSexo.add(jrbFeminino);
        jrbFeminino.setText("Feminino");
        jrbFeminino.setActionCommand("Feminino");
        jrbFeminino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrbFemininoKeyPressed(evt);
            }
        });

        bgSexo.add(jrbOutros);
        jrbOutros.setText("Outros");
        jrbOutros.setActionCommand("Outros");
        jrbOutros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrbOutrosKeyPressed(evt);
            }
        });

        jlpDados.setLayer(jlNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jlCpf, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jlIdade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jlSexo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jtNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jtCpf, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jtIdade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jrbMasculino, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jrbFeminino, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDados.setLayer(jrbOutros, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpDadosLayout = new javax.swing.GroupLayout(jlpDados);
        jlpDados.setLayout(jlpDadosLayout);
        jlpDadosLayout.setHorizontalGroup(
            jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jlpDadosLayout.createSequentialGroup()
                        .addGroup(jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jlpDadosLayout.createSequentialGroup()
                                .addComponent(jlSexo)
                                .addGap(18, 18, 18)
                                .addComponent(jrbMasculino)
                                .addGap(18, 18, 18)
                                .addComponent(jrbFeminino))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jlpDadosLayout.createSequentialGroup()
                                .addComponent(jlIdade)
                                .addGap(18, 18, 18)
                                .addGroup(jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jlpDadosLayout.createSequentialGroup()
                                        .addComponent(jtIdade)
                                        .addGap(85, 85, 85)))))
                        .addGap(18, 18, 18)
                        .addComponent(jrbOutros))
                    .addGroup(jlpDadosLayout.createSequentialGroup()
                        .addGroup(jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlNome)
                            .addComponent(jlCpf))
                        .addGap(18, 18, 18)
                        .addComponent(jtNome)))
                .addContainerGap(195, Short.MAX_VALUE))
        );
        jlpDadosLayout.setVerticalGroup(
            jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCpf)
                    .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlIdade)
                    .addComponent(jtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jlpDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSexo)
                    .addComponent(jrbMasculino)
                    .addComponent(jrbFeminino)
                    .addComponent(jrbOutros))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cadastrar.png"))); // NOI18N
        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });
        jbCadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCadastrarKeyPressed(evt);
            }
        });

        jbLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/limpar.png"))); // NOI18N
        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });
        jbLimpar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbLimparKeyPressed(evt);
            }
        });

        jLayeredPane3.setLayer(jbCadastrar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jbLimpar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlpEndereco.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jlRua.setText("Rua:");

        jlN.setText("N¬∫:");

        jlBairro.setText("Bairro:");

        jlCidade.setText("Cidade:");

        jlEstado.setText("Estado:");

        jtRua.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtRuaFocusLost(evt);
            }
        });
        jtRua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtRuaKeyPressed(evt);
            }
        });

        jtBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtBairroFocusLost(evt);
            }
        });
        jtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtBairroKeyPressed(evt);
            }
        });

        jtCidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCidadeFocusLost(evt);
            }
        });
        jtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCidadeKeyPressed(evt);
            }
        });

        jtN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNFocusLost(evt);
            }
        });
        jtN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNKeyPressed(evt);
            }
        });

        jtEstado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtEstadoFocusLost(evt);
            }
        });
        jtEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtEstadoKeyPressed(evt);
            }
        });

        jlpEndereco.setLayer(jlRua, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jlN, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jlBairro, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jlCidade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jlEstado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jtRua, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jtBairro, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jtCidade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jtN, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpEndereco.setLayer(jtEstado, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpEnderecoLayout = new javax.swing.GroupLayout(jlpEndereco);
        jlpEndereco.setLayout(jlpEnderecoLayout);
        jlpEnderecoLayout.setHorizontalGroup(
            jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpEnderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlBairro)
                    .addComponent(jlRua)
                    .addComponent(jlCidade))
                .addGap(22, 22, 22)
                .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jlpEnderecoLayout.createSequentialGroup()
                        .addComponent(jtCidade)
                        .addGap(18, 18, 18)
                        .addComponent(jlEstado))
                    .addGroup(jlpEnderecoLayout.createSequentialGroup()
                        .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtBairro)
                            .addComponent(jtRua))
                        .addGap(39, 39, 39)
                        .addComponent(jlN)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtN)
                    .addComponent(jtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jlpEnderecoLayout.setVerticalGroup(
            jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpEnderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jlpEnderecoLayout.createSequentialGroup()
                        .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlN)
                                .addComponent(jtN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jlpEnderecoLayout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jlEstado)))
                        .addGap(3, 3, 3))
                    .addGroup(jlpEnderecoLayout.createSequentialGroup()
                        .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlRua)
                            .addComponent(jtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlBairro)
                            .addComponent(jtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jlpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCidade)
                            .addComponent(jtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlpDados)
                    .addComponent(jlpEndereco)
                    .addComponent(jLayeredPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlpDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlpEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cadastrar() {
        try {
            if (!jtNome.getText().isEmpty()) {
                objCliente.setNome(jtNome.getText());
            } else {
                throw new NumberFormatException("Nome Inv√°lido!");
            }
            if (!jtCpf.getText().isEmpty()) {
                objCliente.setCpf(Long.parseLong(jtCpf.getText()));
            } else {
                throw new NumberFormatException("Cpf Inv√°lido!");
            }
            if (!jtIdade.getText().isEmpty()) {
                objCliente.setIdade(Byte.parseByte(jtIdade.getText()));
            } else {
                throw new NumberFormatException("Idade Inv√°lida!");
            }
            if (bgSexo.getSelection() != null) {
                objCliente.setSexo(bgSexo.getSelection().getActionCommand());
            } else {
                throw new NumberFormatException("Informe o Sexo!");
            }
            if (!jtRua.getText().isEmpty()) {
                objEndereco.setRua(jtRua.getText());
            } else {
                throw new NumberFormatException("Rua Inv√°lida!");
            }
            if (!jtN.getText().isEmpty()) {
                objEndereco.setNumero(Integer.parseInt(jtN.getText()));
            } else {
                throw new NumberFormatException("Numero Inv√°lido!");
            }
            if (!jtBairro.getText().isEmpty()) {
                objEndereco.setBairro(jtBairro.getText());
            } else {
                throw new NumberFormatException("Bairro Inv√°lido!");
            }
            if (!jtCidade.getText().isEmpty()) {
                objEndereco.setCidade(jtCidade.getText());
            } else {
                throw new NumberFormatException("Cidade Inv√°lida!");
            }
            if (!jtEstado.getText().isEmpty()) {
                objEndereco.setEstado(jtEstado.getText());
            } else {
                throw new NumberFormatException("Estado Inv√°lido!");
            }

            objCliente.setEndereco(objEndereco);
            
            ClienteServicos CS = ServicosFactory.getClienteServicos();
            CS.cadastrarCliente(objCliente);
            
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Cadastro Efetuado com Sucesso!",
                    "Sistema",
                    JOptionPane.PLAIN_MESSAGE);        

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Erro: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Algum erro aconteceu!" + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Dados: " + objCliente.toString(),
                    "Relatorio",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpar() {
        jtNome.setText(null);
        jtCpf.setText(null);
        bgSexo.clearSelection();
        jtIdade.setText(null);
        jtRua.setText(null);
        jtN.setText(null);
        jtBairro.setText(null);
        jtCidade.setText(null);
        jtEstado.setText(null);
        
        jtNome.grabFocus();
        
    }

    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        cadastrar();
        limpar();
    }//GEN-LAST:event_jbCadastrarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        limpar();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtCpf.grabFocus();
        }
    }//GEN-LAST:event_jtNomeKeyPressed

    private void jtCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCpfKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtIdade.grabFocus();
        }
    }//GEN-LAST:event_jtCpfKeyPressed

    private void jtIdadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIdadeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jrbMasculino.grabFocus();
        }
    }//GEN-LAST:event_jtIdadeKeyPressed

    private void jrbMasculinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrbMasculinoKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jrbFeminino.grabFocus();
        }
    }//GEN-LAST:event_jrbMasculinoKeyPressed

    private void jrbFemininoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrbFemininoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jrbOutros.grabFocus();
        }
    }//GEN-LAST:event_jrbFemininoKeyPressed

    private void jrbOutrosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrbOutrosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtRua.grabFocus();
        }
    }//GEN-LAST:event_jrbOutrosKeyPressed

    private void jtRuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtRuaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtN.grabFocus();
        }
    }//GEN-LAST:event_jtRuaKeyPressed

    private void jtNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtBairro.grabFocus();
        }
    }//GEN-LAST:event_jtNKeyPressed

    private void jtBairroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBairroKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtCidade.grabFocus();
        }
    }//GEN-LAST:event_jtBairroKeyPressed

    private void jtCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCidadeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtEstado.grabFocus();
        }
    }//GEN-LAST:event_jtCidadeKeyPressed

    private void jtEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtEstadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cadastrar();
            limpar();
        }
    }//GEN-LAST:event_jtEstadoKeyPressed

    private void jtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNomeFocusLost
        if (jtNome.getText().isEmpty()) {
            jtNome.setBackground(Color.decode("#FFFFF0"));
            jtNome.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            jtNome.setBackground(Color.white);
            jtNome.setBorder(BorderFactory.createLineBorder(Color.gray));
        }
    }//GEN-LAST:event_jtNomeFocusLost

    private void jtCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCpfFocusLost
        if (jtCpf.getText().isEmpty()) {
            jtCpf.setBackground(Color.decode("#FFFFF0"));
            jtCpf.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            jtCpf.setBackground(Color.white);
            jtCpf.setBorder(BorderFactory.createLineBorder(Color.gray));
        }
    }//GEN-LAST:event_jtCpfFocusLost

    private void jtIdadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtIdadeFocusLost
        if (jtIdade.getText().isEmpty()) {
            jtIdade.setBackground(Color.decode("#FFFFF0"));
            jtIdade.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            jtIdade.setBackground(Color.white);
            jtIdade.setBorder(BorderFactory.createLineBorder(Color.gray));
        }
    }//GEN-LAST:event_jtIdadeFocusLost

    private void jtRuaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtRuaFocusLost
        if (jtRua.getText().isEmpty()) {
            jtRua.setBackground(Color.decode("#FFFFF0"));
            jtRua.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            jtRua.setBackground(Color.white);
            jtRua.setBorder(BorderFactory.createLineBorder(Color.gray));
        }
    }//GEN-LAST:event_jtRuaFocusLost

    private void jtNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNFocusLost
        if (jtN.getText().isEmpty()) {
            jtN.setBackground(Color.decode("#FFFFF0"));
            jtN.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            jtN.setBackground(Color.white);
            jtN.setBorder(BorderFactory.createLineBorder(Color.gray));
        }
    }//GEN-LAST:event_jtNFocusLost

    private void jtBairroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtBairroFocusLost
        if (jtBairro.getText().isEmpty()) {
            jtBairro.setBackground(Color.decode("#FFFFF0"));
            jtBairro.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            jtBairro.setBackground(Color.white);
            jtBairro.setBorder(BorderFactory.createLineBorder(Color.gray));
        }
    }//GEN-LAST:event_jtBairroFocusLost

    private void jtCidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCidadeFocusLost
        if (jtCidade.getText().isEmpty()) {
            jtCidade.setBackground(Color.decode("#FFFFF0"));
            jtCidade.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            jtCidade.setBackground(Color.white);
            jtCidade.setBorder(BorderFactory.createLineBorder(Color.gray));
        }
    }//GEN-LAST:event_jtCidadeFocusLost

    private void jtEstadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtEstadoFocusLost
        if (jtEstado.getText().isEmpty()) {
            jtEstado.setBackground(Color.decode("#FFFFF0"));
            jtEstado.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            jtEstado.setBackground(Color.white);
            jtEstado.setBorder(BorderFactory.createLineBorder(Color.gray));
        }
    }//GEN-LAST:event_jtEstadoFocusLost

    private void jbCadastrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCadastrarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cadastrar();
            limpar();
        }
    }//GEN-LAST:event_jbCadastrarKeyPressed

    private void jbLimparKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbLimparKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            limpar();
        }
    }//GEN-LAST:event_jbLimparKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JLabel jlBairro;
    private javax.swing.JLabel jlCidade;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlIdade;
    private javax.swing.JLabel jlN;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlRua;
    private javax.swing.JLabel jlSexo;
    private javax.swing.JLayeredPane jlpDados;
    private javax.swing.JLayeredPane jlpEndereco;
    private javax.swing.JRadioButton jrbFeminino;
    private javax.swing.JRadioButton jrbMasculino;
    private javax.swing.JRadioButton jrbOutros;
    private javax.swing.JTextField jtBairro;
    private javax.swing.JTextField jtCidade;
    private javax.swing.JTextField jtCpf;
    private javax.swing.JTextField jtEstado;
    private javax.swing.JTextField jtIdade;
    private javax.swing.JTextField jtN;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtRua;
    // End of variables declaration//GEN-END:variables
}
