/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;

/**
 *
 * @author André Luiz Alves & Eduardo Gautier
 * @since 06/07/2018 - 16h44
 * @version 1.0 meta charset
 */
public class Menu extends javax.swing.JFrame implements InternalFrameListener {

    private boolean flagCadCliente = false;
    private boolean flagCadVeiculo = false;
    private boolean flagBuscaCliente = false;
    private boolean flagBuscaVeiculo = false;

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jAreaDeTrabalho = new javax.swing.JDesktopPane();
        jmbMenu = new javax.swing.JMenuBar();
        jmCadastro = new javax.swing.JMenu();
        jmiCadVeiculo = new javax.swing.JMenuItem();
        jmiCadCliente = new javax.swing.JMenuItem();
        jmBusca = new javax.swing.JMenu();
        jmiBuscaVeiculo = new javax.swing.JMenuItem();
        jmiBuscaCliente = new javax.swing.JMenuItem();
        jmLogin = new javax.swing.JMenu();
        jmiTrocarUsuario = new javax.swing.JMenuItem();
        jmSair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Só Carrão Multimarcas");

        javax.swing.GroupLayout jAreaDeTrabalhoLayout = new javax.swing.GroupLayout(jAreaDeTrabalho);
        jAreaDeTrabalho.setLayout(jAreaDeTrabalhoLayout);
        jAreaDeTrabalhoLayout.setHorizontalGroup(
            jAreaDeTrabalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        jAreaDeTrabalhoLayout.setVerticalGroup(
            jAreaDeTrabalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 257, Short.MAX_VALUE)
        );

        jmCadastro.setText("Cadastro");

        jmiCadVeiculo.setText("Cadastrar Veículo");
        jmiCadVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadVeiculoActionPerformed(evt);
            }
        });
        jmCadastro.add(jmiCadVeiculo);

        jmiCadCliente.setText("Cadastrar Cliente");
        jmiCadCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadClienteActionPerformed(evt);
            }
        });
        jmCadastro.add(jmiCadCliente);

        jmbMenu.add(jmCadastro);

        jmBusca.setText("Busca");

        jmiBuscaVeiculo.setText("Buscar Veículo");
        jmiBuscaVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiBuscaVeiculoActionPerformed(evt);
            }
        });
        jmBusca.add(jmiBuscaVeiculo);

        jmiBuscaCliente.setText("Buscar Cliente");
        jmiBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiBuscaClienteActionPerformed(evt);
            }
        });
        jmBusca.add(jmiBuscaCliente);

        jmbMenu.add(jmBusca);

        jmLogin.setText("Login");

        jmiTrocarUsuario.setText("Trocar Usuário");
        jmiTrocarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTrocarUsuarioActionPerformed(evt);
            }
        });
        jmLogin.add(jmiTrocarUsuario);

        jmbMenu.add(jmLogin);

        jmSair.setText("Sair");
        jmSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmSairMouseClicked(evt);
            }
        });
        jmbMenu.add(jmSair);

        setJMenuBar(jmbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jAreaDeTrabalho)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jAreaDeTrabalho)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void abrirCadVeiculo() {
        if (!flagCadVeiculo) {
            GUICadVeiculo cadVeiculo = new GUICadVeiculo();
            jAreaDeTrabalho.add(cadVeiculo);
            cadVeiculo.setVisible(true);
            flagCadVeiculo = true;
            cadVeiculo.addInternalFrameListener(this);
        }
    }

    private void abrirCadCliente() {
        if (!flagCadCliente) {
            GUICadCliente cadCliente = new GUICadCliente();
            jAreaDeTrabalho.add(cadCliente);
            cadCliente.setVisible(true);
            flagCadCliente = true;
            cadCliente.addInternalFrameListener(this);
        }

    }

    private void abrirBuscaCliente() {
        if (!flagBuscaCliente) {
            GUIBuscaCliente buscaCliente = new GUIBuscaCliente();
            jAreaDeTrabalho.add(buscaCliente);
            try {
                buscaCliente.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            buscaCliente.setVisible(true);
            flagBuscaCliente = true;
            buscaCliente.addInternalFrameListener(this);
        }//fecha if
    }

    private void abrirBuscaVeiculo() {
        if (!flagBuscaVeiculo) {
            GUIBuscaVeiculo buscaVeiculo = new GUIBuscaVeiculo();
            jAreaDeTrabalho.add(buscaVeiculo);
            try {
                buscaVeiculo.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            buscaVeiculo.setVisible(true);
            flagBuscaVeiculo = true;
            buscaVeiculo.addInternalFrameListener(this);
        }//fecha if

    }
    
    private void abrirGUILogin(){
        GUILogin gl = new GUILogin();
        gl.setVisible(true);
        this.setVisible(false);
    }
    private void jmiCadVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadVeiculoActionPerformed
        abrirCadVeiculo();
    }//GEN-LAST:event_jmiCadVeiculoActionPerformed

    private void jmSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmSairMouseClicked

        int op = JOptionPane.showConfirmDialog(
                rootPane,
                "Deseja Realmente Sair?",
                "Confirmação",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);

        switch (op) {
            case 0:
                System.exit(0);
            default:
                JOptionPane.showMessageDialog(
                        null,
                        "Cancelado com Sucesso!",
                        "Sistema",
                        JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jmSairMouseClicked

    private void jmiCadClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadClienteActionPerformed
        abrirCadCliente();
    }//GEN-LAST:event_jmiCadClienteActionPerformed

    private void jmiBuscaVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiBuscaVeiculoActionPerformed
        abrirBuscaVeiculo();
    }//GEN-LAST:event_jmiBuscaVeiculoActionPerformed

    private void jmiBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiBuscaClienteActionPerformed
        abrirBuscaCliente();
    }//GEN-LAST:event_jmiBuscaClienteActionPerformed

    private void jmiTrocarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTrocarUsuarioActionPerformed
        abrirGUILogin();
    }//GEN-LAST:event_jmiTrocarUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) {
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Menu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane jAreaDeTrabalho;
    private javax.swing.JMenu jmBusca;
    private javax.swing.JMenu jmCadastro;
    private javax.swing.JMenu jmLogin;
    private javax.swing.JMenu jmSair;
    private javax.swing.JMenuBar jmbMenu;
    private javax.swing.JMenuItem jmiBuscaCliente;
    private javax.swing.JMenuItem jmiBuscaVeiculo;
    private javax.swing.JMenuItem jmiCadCliente;
    private javax.swing.JMenuItem jmiCadVeiculo;
    private javax.swing.JMenuItem jmiTrocarUsuario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void internalFrameOpened(InternalFrameEvent e) {

    }

    @Override
    public void internalFrameClosing(InternalFrameEvent e) {

    }

    @Override
    public void internalFrameClosed(InternalFrameEvent e) {
        if (e.getInternalFrame() instanceof GUICadVeiculo) {
            flagCadVeiculo = false;
        }
        if (e.getInternalFrame() instanceof GUICadCliente) {
            flagCadCliente = false;
        }
        if (e.getInternalFrame() instanceof GUIBuscaVeiculo) {
            flagBuscaVeiculo = false;
        }
        if (e.getInternalFrame() instanceof GUIBuscaCliente) {
            flagBuscaCliente = false;
        }
    }

    @Override
    public void internalFrameIconified(InternalFrameEvent e) {

    }

    @Override
    public void internalFrameDeiconified(InternalFrameEvent e) {

    }

    @Override
    public void internalFrameActivated(InternalFrameEvent e) {

    }

    @Override
    public void internalFrameDeactivated(InternalFrameEvent e) {

    }
}
